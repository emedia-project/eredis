{erl_opts, [
            debug_info, 
            warn_export_vars, 
            warn_shadow_vars, 
            warn_obsolete_guard,
            {platform_define, "^[0-9]+", namespaced_types}
           ]}.

{plugins, [
           {rebar3_elixir, "~> 0.1.1"},
           rebar3_hex,
           rebar3_lint
          ]}.

{eunit_opts, [no_tty, {report, {unite_compact, [profile]}}]}.
{cover_enabled, true}.

{xref_checks, []}.

{profiles, [
            {test, [
                    {deps, [
                            {unite, "", {git, "git://github.com/basho/unite.git"}}
                           ]}
                   ]},
            {docs, [
                    {deps, [
                            {edown, {git, "https://github.com/botsunit/edown.git", {branch, "master"}}}
                           ]},
                    {edoc_opts, [
                                 {doclet, edown_doclet}
                                 , {app_default, "http://www.erlang.org/doc/man"}
                                 , {source_path, ["src"]}
                                 , {overview, "overview.edoc"}
                                 , {stylesheet, ""}
                                 , {image, ""}
                                 , {top_level_readme, {"./README.md", "https://github.com/emedia-project/eredis"}}
                                ]}
                   ]},
            {release, [
                       {elvis, [
                        #{dirs => ["."],
                          filter => "rebar.config",
                          rules => [{elvis_project, no_deps_master_rebar, []}]}]}
                      ]}
           ]}.

{elvis,
   [#{dirs => ["src", "test"],
      filter => "*.erl",
      rules => [{elvis_style, line_length, #{limit => 180}},
                {elvis_style, no_tabs},
                {elvis_style, no_trailing_whitespace},
                {elvis_style, macro_names},
                {elvis_style, macro_module_names},
                {elvis_style, dont_repeat_yourself, #{min_complexity => 25}},
                {elvis_style, operator_spaces, #{rules => [{right, ","},
                                                           {right, "++"},
                                                           {left, "++"}]}}]}]}.
